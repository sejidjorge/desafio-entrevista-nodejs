openapi: "3.0.2"
info:
  title: API Title
  version: "1.0"
servers:
  - url: http://localhost:3000
paths:
  /users/register:
    post:
      tags:
        - Users
      responses:
        "200":
          description: Successfully registered user.
        "400":
          description: Bad request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
  /users/login:
    post:
      tags:
        - Users
      responses:
        "200":
          description: Successfully logged in user.
        "400":
          description: Bad request.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginUser"
  /users/list:
    get:
      tags:
        - Users
      responses:
        "200":
          description: Successfully retrieved list of users.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/listAllUsers"
        "400":
          description: Bad request.
  /users/{userId}:
    get:
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          example: "123e4567-e89b-12d3-a456-426614174000"
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: Successfully retrieved user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Bad request.
    put:
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          example: "123e4567-e89b-12d3-a456-426614174000"
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/editUser"
      responses:
        "200":
          description: Successfully edited user.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        "400":
          description: Bad request.

    delete:
      tags:
        - Users
      parameters:
        - in: path
          name: userId
          example: "123e4567-e89b-12d3-a456-426614174000"
          schema:
            type: integer
          required: true
      responses:
        "200":
          description: Successfully deleted user.
        "400":
          description: Bad request.

components:
  schemas:
    createUser:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "johndoe@email.com"
        password:
          type: string
          example: "password"
        role:
          type: string
          example: "USER"
          enum: ["USER", "ADMIN"]
    user:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
        name:
          type: string
          example: "John Doe"
        email:
          type: string
          example: "johndoe@email.com"
        role:
          type: string
          example: "USER"
          enum: ["USER", "ADMIN"]
        createdAt:
          type: string
          format: date-time
          example: "2022-01-01T00:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          example: "2022-01-01T00:00:00.000Z"
    editUser:
      type: object
      properties:
        name:
          type: string
          example: "John Doe Edd"
        role:
          type: string
          example: "ADMIN"
          enum: ["USER", "ADMIN"]
    listAllUsers:
      type: array
      items:
        $ref: "#/components/schemas/user"
    loginUser:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: "johndoe@email.com"
        password:
          type: string
          example: "password"
