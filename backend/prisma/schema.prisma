// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  OPEN //aberto para lances
  CLOSED //encerrado/n√£o iniciado
}

model Users {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  email        String      @unique
  name         String
  role         Role        @default(USER)
  passwordHash String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @default(now())
  Purchases    Purchases[]
  Bids         Bids[]
}

model Cars {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  brand        String
  model        String
  year         String
  description  String
  auctionStart DateTime
  auctionEnd   DateTime
  startBid     Int
  image        String
  status       Status   @default(OPEN)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())

  Purchases Purchases[]
  Bids      Bids[]
}

model Bids {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  bidValue  Int
  createdAt DateTime    @default(now())
  winning   Boolean
  user      Users       @relation(fields: [userId], references: [id])
  userId    String      @db.ObjectId
  car       Cars        @relation(fields: [carId], references: [id])
  carId     String      @db.ObjectId
  Purchases Purchases[]
}

model Purchases {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  user      Users    @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  car       Cars     @relation(fields: [carId], references: [id])
  carId     String   @db.ObjectId
  bid       Bids     @relation(fields: [bidId], references: [id])
  bidId     String   @db.ObjectId
}
